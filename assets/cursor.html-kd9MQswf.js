import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as r,e as o}from"./app-CV1ZlhnZ.js";const l={},n=o('<h1 id="cursor" tabindex="-1"><a class="header-anchor" href="#cursor" aria-hidden="true">#</a> cursor</h1><p>@web是搜索，@&lt;你的link&gt; 是读网页</p><p>https://docs.cursor.com/chat/agent</p><p>核心功能： 自动上下文提取：Agent会自动从代码库中提取相关上下文信息，帮助开发者快速定位问题或生成代码。 运行终端命令：无需离开编辑器，即可直接运行命令行操作。 文件操作：支持文件创建、修改、删除等操作，简化开发流程。 语义搜索：通过代码语义搜索功能，快速找到关键代码片段。 工具调用：Agent最多支持<strong>连续调用</strong>25个工具，可以胜任更加复杂的开发场景。</p><p>如何启用：composer-&gt;normal/agent选agent</p><p>使用场景 如果是一般的聊天交互，比如你想让Cursor帮你修改某个文件，那么Normal模式就可以完成，不需要启用Agent模式。</p><p>如果需要Cursor独立的去完成一项相对复杂的任务，那么Agent模式可以做的事情非常多，以下是一些常见的使用场景：</p><p>代码重构：当需要对某个模块进行重构时，Agent会根据代码库上下文提供优化建议，并自动生成替代代码。 错误修复：当代码出现错误时，Agent不仅会标注问题，还会提供详细的修复建议，并自动修复。 自动化任务：通过Agent，可以实现文件批量操作、脚本生成等自动化任务，大幅提升效率。 代码生成：通过Agent，可以实现代码生成，比如生成一个完整的项目。</p><p>Agent模式可以连续调用最多25个工具，所以它会自己努力尝试各种方法，直到完成任务，中途不需要用户的干预。这就是它的强大之处，也是它和普通聊天模式最大的区别。</p><p>读取项目文件 Bug Finder</p><ul><li>https://blog.csdn.net/weixin_46074689/article/details/144589545</li></ul><p>重构一个项目</p><ul><li>任务分解与规划</li><li>终端命令执行添加依赖</li><li>自动上下文收集</li><li>代码生成与修改</li></ul><h1 id="openai-codex" tabindex="-1"><a class="header-anchor" href="#openai-codex" aria-hidden="true">#</a> OpenAI Codex</h1><p>Codex 提供了三种操作模式:</p><p>建议模式 (Suggest) - 默认模式 可以读取仓库中的任何文件 所有文件写入/补丁和所有 shell 命令都需要批准 自动编辑 (Auto Edit) 可以读取并应用补丁写入文件 所有 shell 命令仍需批准 完全自动 (Full Auto) 可以读写文件 可以执行 shell 命令 所有操作都在禁用网络的环境中运行，并限制在当前工作目录</p><p>原文链接：https://blog.csdn.net/m0_71165399/article/details/147314667</p><p>https://blog.csdn.net/m0_71165399/article/details/147314667</p>',18),s=[n];function a(p,i){return t(),r("div",null,s)}const h=e(l,[["render",a],["__file","cursor.html.vue"]]);export{h as default};
