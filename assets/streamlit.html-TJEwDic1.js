import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as t,d as e,f as s}from"./app-rvE1EVAc.js";const p={},o=s('<h1 id="streamlit构建对话式应用程序" tabindex="-1"><a class="header-anchor" href="#streamlit构建对话式应用程序" aria-hidden="true">#</a> streamlit构建对话式应用程序</h1><ul><li><ol><li>构建对话界面所需的组件</li></ol></li><li><ol start="2"><li>对话界面完整流程</li></ol></li><li><ol start="3"><li>流式输出assistant消息的改造</li></ol></li><li><ol start="4"><li>构建封装ChatGPT的应用</li></ol></li></ul>',2),i=s(`<h2 id="_1-构建对话界面所需的组件" tabindex="-1"><a class="header-anchor" href="#_1-构建对话界面所需的组件" aria-hidden="true">#</a> 1. 构建对话界面所需的组件</h2><ul><li>1.两个聊天消息容器：分别显示来自用户和机器人的消息</li><li>2.聊天输入小部件：以便用户输入消息</li><li>3.存储聊天历史消息的列表：在每次用户或机器人发送消息时附加到该列表中。</li></ul><h3 id="_1-1-st-chat-message-聊天消息容器-显示双方聊天消息" tabindex="-1"><a class="header-anchor" href="#_1-1-st-chat-message-聊天消息容器-显示双方聊天消息" aria-hidden="true">#</a> 1.1. st.chat_message 聊天消息容器，显示双方聊天消息</h3><ul><li>可以包含任何streamlit元素，包括图表、表格、文本等</li><li>要将元素添加到返回的容器中，可以使用with符号，也可以直接进行方法调用</li></ul><h3 id="_1-2-st-chat-input-聊天输入组件-用户输入消息" tabindex="-1"><a class="header-anchor" href="#_1-2-st-chat-input-聊天输入组件-用户输入消息" aria-hidden="true">#</a> 1.2. st.chat_input 聊天输入组件，用户输入消息</h3><ul><li>返回值是用户的输入</li><li>可以传入默认提示显示在输入框内</li></ul><h3 id="_1-3-st-session-state-messages-聊天历史消息列表" tabindex="-1"><a class="header-anchor" href="#_1-3-st-session-state-messages-聊天历史消息列表" aria-hidden="true">#</a> 1.3. st.session_state.messages 聊天历史消息列表</h3><ul><li>列表中每个条目都包含2个信息：角色role和消息内容content。</li></ul><h2 id="_2-对话界面完整流程" tabindex="-1"><a class="header-anchor" href="#_2-对话界面完整流程" aria-hidden="true">#</a> 2. 对话界面完整流程</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> streamlit <span class="token keyword">as</span> st

st<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;Chat Bot&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Initialize chat history</span>
<span class="token keyword">if</span> <span class="token string">&quot;messages&quot;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> st<span class="token punctuation">.</span>session_state<span class="token punctuation">:</span>
    st<span class="token punctuation">.</span>session_state<span class="token punctuation">.</span>messages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token comment"># Display chat messages from history</span>
<span class="token keyword">for</span> message <span class="token keyword">in</span> st<span class="token punctuation">.</span>session_state<span class="token punctuation">.</span>messages<span class="token punctuation">:</span>
    <span class="token keyword">with</span> st<span class="token punctuation">.</span>chat_message<span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        st<span class="token punctuation">.</span>markdown<span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># React to user input</span>
<span class="token keyword">if</span> prompt <span class="token operator">:=</span> st<span class="token punctuation">.</span>chat_input<span class="token punctuation">(</span><span class="token string">&quot;Ask me anything!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Display user message in chat message container</span>
    <span class="token keyword">with</span> st<span class="token punctuation">.</span>chat_message<span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        st<span class="token punctuation">.</span>markdown<span class="token punctuation">(</span>prompt<span class="token punctuation">)</span>

    <span class="token comment"># Add user message to chat history</span>
    st<span class="token punctuation">.</span>session_state<span class="token punctuation">.</span>messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> prompt<span class="token punctuation">}</span><span class="token punctuation">)</span>
    
    response <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;Echo: </span><span class="token interpolation"><span class="token punctuation">{</span>prompt<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>

    <span class="token comment"># Display assistant response in chat message container</span>
    <span class="token keyword">with</span> st<span class="token punctuation">.</span>chat_message<span class="token punctuation">(</span><span class="token string">&quot;assistant&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        st<span class="token punctuation">.</span>markdown<span class="token punctuation">(</span>response<span class="token punctuation">)</span>

    <span class="token comment"># Add assistant response to chat history</span>
    st<span class="token punctuation">.</span>session_state<span class="token punctuation">.</span>messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;assistant&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;response&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-流式输出assistant消息的改造" tabindex="-1"><a class="header-anchor" href="#_3-流式输出assistant消息的改造" aria-hidden="true">#</a> 3. 流式输出assistant消息的改造</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Streamd response emulator</span>
<span class="token keyword">def</span> <span class="token function">response_generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># response example</span>
    response <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;Streamlit is an open-source Python library that makes it easy to create and share beautiful, custom web apps for machine learning and data science. In just a few minutes you can build and deploy powerful data apps. So let&#39;s get started!&quot;</span></span>

    <span class="token keyword">for</span> word <span class="token keyword">in</span> response<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">yield</span> word <span class="token operator">+</span> <span class="token string">&quot; &quot;</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Display assistant response in chat message container</span>
<span class="token keyword">with</span> st<span class="token punctuation">.</span>chat_message<span class="token punctuation">(</span><span class="token string">&quot;assistant&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    response <span class="token operator">=</span> st<span class="token punctuation">.</span>write_stream<span class="token punctuation">(</span>response_generator<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-构建封装chatgpt的应用" tabindex="-1"><a class="header-anchor" href="#_4-构建封装chatgpt的应用" aria-hidden="true">#</a> 4. 构建封装ChatGPT的应用</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> openai <span class="token keyword">import</span> OpenAI
<span class="token keyword">import</span> streamlit <span class="token keyword">as</span> st

st<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;ChatGPT-like clone&quot;</span><span class="token punctuation">)</span>

client <span class="token operator">=</span> OpenAI<span class="token punctuation">(</span>api_key<span class="token operator">=</span>st<span class="token punctuation">.</span>secrets<span class="token punctuation">[</span><span class="token string">&quot;OPENAI_API_KEY&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token string">&quot;openai_model&quot;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> st<span class="token punctuation">.</span>session_state<span class="token punctuation">:</span>
    st<span class="token punctuation">.</span>session_state<span class="token punctuation">[</span><span class="token string">&quot;openai_model&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;gpt-3.5-turbo&quot;</span>

<span class="token keyword">if</span> <span class="token string">&quot;messages&quot;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> st<span class="token punctuation">.</span>session_state<span class="token punctuation">:</span>
    st<span class="token punctuation">.</span>session_state<span class="token punctuation">.</span>messages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> message <span class="token keyword">in</span> st<span class="token punctuation">.</span>session_state<span class="token punctuation">.</span>messages<span class="token punctuation">:</span>
    <span class="token keyword">with</span> st<span class="token punctuation">.</span>chat_message<span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        st<span class="token punctuation">.</span>markdown<span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> prompt <span class="token operator">:=</span> st<span class="token punctuation">.</span>chat_input<span class="token punctuation">(</span><span class="token string">&quot;What is up?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    st<span class="token punctuation">.</span>session_state<span class="token punctuation">.</span>messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> prompt<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> st<span class="token punctuation">.</span>chat_message<span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        st<span class="token punctuation">.</span>markdown<span class="token punctuation">(</span>prompt<span class="token punctuation">)</span>

    <span class="token keyword">with</span> st<span class="token punctuation">.</span>chat_message<span class="token punctuation">(</span><span class="token string">&quot;assistant&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        stream <span class="token operator">=</span> client<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>completions<span class="token punctuation">.</span>create<span class="token punctuation">(</span>
            model<span class="token operator">=</span>st<span class="token punctuation">.</span>session_state<span class="token punctuation">[</span><span class="token string">&quot;openai_model&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            messages<span class="token operator">=</span><span class="token punctuation">[</span>
                <span class="token punctuation">{</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> m<span class="token punctuation">[</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> m<span class="token punctuation">[</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
                <span class="token keyword">for</span> m <span class="token keyword">in</span> st<span class="token punctuation">.</span>session_state<span class="token punctuation">.</span>messages
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        response <span class="token operator">=</span> st<span class="token punctuation">.</span>write_stream<span class="token punctuation">(</span>stream<span class="token punctuation">)</span>
    st<span class="token punctuation">.</span>session_state<span class="token punctuation">.</span>messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;assistant&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> response<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function c(l,u){return a(),t("div",null,[o,e(" more "),i])}const d=n(p,[["render",c],["__file","streamlit.html.vue"]]);export{d as default};
