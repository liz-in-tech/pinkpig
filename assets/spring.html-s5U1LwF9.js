const e=JSON.parse('{"key":"v-5a0477de","path":"/java/spring/spring.html","title":"Spring","lang":"en-US","frontmatter":{"icon":"lightbulb","description":"Spring Spring Framework Spring特性 IOC 和 DI 的支持 Spring 的核心就是一个大的工厂容器，可以维护所有对象的创建和依赖关系，Spring 工厂用于生成 Bean，并且管理 Bean 的生命周期，实现高内聚低耦合的设计理念 AOP 编程的支持 Spring 提供了面向切面编程，对程序进行增强可以很方便的实现 声明式事务的支持","head":[["meta",{"property":"og:url","content":"https://liz-in-tech.github.io/pinkpig/java/spring/spring.html"}],["meta",{"property":"og:site_name","content":"Liz"}],["meta",{"property":"og:title","content":"Spring"}],["meta",{"property":"og:description","content":"Spring Spring Framework Spring特性 IOC 和 DI 的支持 Spring 的核心就是一个大的工厂容器，可以维护所有对象的创建和依赖关系，Spring 工厂用于生成 Bean，并且管理 Bean 的生命周期，实现高内聚低耦合的设计理念 AOP 编程的支持 Spring 提供了面向切面编程，对程序进行增强可以很方便的实现 声明式事务的支持"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-16T15:28:18.000Z"}],["meta",{"property":"article:author","content":"Liz"}],["meta",{"property":"article:modified_time","content":"2025-02-16T15:28:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-16T15:28:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Liz\\",\\"url\\":\\"https://github.com/liz-in-tech\\"}]}"]]},"headers":[{"level":2,"title":"Spring Framework","slug":"spring-framework","link":"#spring-framework","children":[{"level":3,"title":"Spring特性","slug":"spring特性","link":"#spring特性","children":[]},{"level":3,"title":"Spring模块","slug":"spring模块","link":"#spring模块","children":[]},{"level":3,"title":"Spring中设计模式的应用","slug":"spring中设计模式的应用","link":"#spring中设计模式的应用","children":[]},{"level":3,"title":"IOC","slug":"ioc","link":"#ioc","children":[]},{"level":3,"title":"AOP","slug":"aop","link":"#aop","children":[]},{"level":3,"title":"Data Access/Integration","slug":"data-access-integration","link":"#data-access-integration","children":[]},{"level":3,"title":"Web","slug":"web","link":"#web","children":[]}]},{"level":2,"title":"Spring Boot","slug":"spring-boot","link":"#spring-boot","children":[{"level":3,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":3,"title":"SpringBoot启动原理","slug":"springboot启动原理","link":"#springboot启动原理","children":[]},{"level":3,"title":"注解","slug":"注解","link":"#注解","children":[]},{"level":3,"title":"热部署","slug":"热部署","link":"#热部署","children":[]}]},{"level":2,"title":"Spring Cloud","slug":"spring-cloud","link":"#spring-cloud","children":[{"level":3,"title":"微服务架构","slug":"微服务架构","link":"#微服务架构","children":[]},{"level":3,"title":"自学参考","slug":"自学参考","link":"#自学参考","children":[]}]},{"level":2,"title":"RPC","slug":"rpc","link":"#rpc","children":[{"level":3,"title":"RPC两个核心模块：通讯，序列化","slug":"rpc两个核心模块-通讯-序列化","link":"#rpc两个核心模块-通讯-序列化","children":[]},{"level":3,"title":"Dubbo","slug":"dubbo","link":"#dubbo","children":[]}]},{"level":2,"title":"设计模式","slug":"设计模式","link":"#设计模式","children":[{"level":3,"title":"学习参考","slug":"学习参考","link":"#学习参考","children":[]},{"level":3,"title":"设计模式要干的事情就是解耦，","slug":"设计模式要干的事情就是解耦","link":"#设计模式要干的事情就是解耦","children":[]},{"level":3,"title":"指导思想","slug":"指导思想","link":"#指导思想","children":[]},{"level":3,"title":"核心原则","slug":"核心原则","link":"#核心原则","children":[]},{"level":3,"title":"Spring中设计模式的应用","slug":"spring中设计模式的应用-1","link":"#spring中设计模式的应用-1","children":[]},{"level":3,"title":"分类","slug":"分类-1","link":"#分类-1","children":[]}]},{"level":2,"title":"分布式","slug":"分布式","link":"#分布式","children":[{"level":3,"title":"分布式理论","slug":"分布式理论","link":"#分布式理论","children":[]},{"level":3,"title":"分布式定时任务","slug":"分布式定时任务","link":"#分布式定时任务","children":[]},{"level":3,"title":"分布式锁与幂等","slug":"分布式锁与幂等","link":"#分布式锁与幂等","children":[]},{"level":3,"title":"分布式事务","slug":"分布式事务","link":"#分布式事务","children":[]},{"level":3,"title":"分布式ID","slug":"分布式id","link":"#分布式id","children":[]},{"level":3,"title":"分布式限流","slug":"分布式限流","link":"#分布式限流","children":[]},{"level":3,"title":"分布式一致性算法","slug":"分布式一致性算法","link":"#分布式一致性算法","children":[]}]}],"git":{"createdTime":1730220137000,"updatedTime":1739719698000,"contributors":[{"name":"liz","email":"liz@MacBook-Pro.local","commits":3},{"name":"unknown","email":"15721607377@163.com","commits":1}]},"readingTime":{"minutes":98.88,"words":29665},"filePathRelative":"java/spring/spring.md","localizedDate":"October 29, 2024","excerpt":"<h1> Spring</h1>\\n<h2> Spring Framework</h2>\\n<h3> Spring特性</h3>\\n<h4> </h4>\\n<figure><figcaption></figcaption></figure>\\n<h5> IOC 和 DI 的支持</h5>\\n<p>Spring 的核心就是一个大的工厂容器，可以维护所有对象的创建和依赖关系，Spring 工厂用于生成 Bean，并且管理 Bean 的生命周期，实现高内聚低耦合的设计理念</p>\\n<h5> AOP 编程的支持</h5>\\n<p>Spring 提供了面向切面编程，对程序进行增强可以很方便的实现</p>\\n<h5> 声明式事务的支持</h5>","autoDesc":true}');export{e as data};
