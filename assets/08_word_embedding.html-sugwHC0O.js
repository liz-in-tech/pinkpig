import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as e,e as o}from"./app-5kh03Iqc.js";const t={},d=o('<h1 id="word-embedding-词嵌入-分布式词向量-稠密向量的非零表征-隐含语义的特征表示" tabindex="-1"><a class="header-anchor" href="#word-embedding-词嵌入-分布式词向量-稠密向量的非零表征-隐含语义的特征表示" aria-hidden="true">#</a> Word Embedding（“词嵌入”，分布式词向量，稠密向量的非零表征，隐含语义的特征表示）</h1><ul><li>what <ul><li>词转为对应的向量，用于在后续任务中提取语义特征</li><li>词向量表即词和向量一一对应的字典</li></ul></li><li>how <ul><li>独热编码（One-hot向量，One-hot编码，One-Hot Representation，基于词典空间的稀疏词向量表示） <ul><li>举例：假如词典中共有10000个词，则这个one-hot向量长度就是10000，该词在词典中所处位置对应的值为1，其他值为0</li><li>优点：简单</li><li>缺点 <ul><li>向量维度非常大，且每个向量是稀疏的</li><li>不同词的one-hot编码向量是正交的，在向量空间中无法表示近似关系，即使两个含义相近的词，它们的词向量点积也为0</li></ul></li></ul></li><li>Embedding (词嵌入，词向量) <ul><li>主要方法包括 Word2Vec、GloVe 和 FastText</li><li>用维度有限的稠密的向量来表示所有的词汇，传统的Transformer中，词嵌入有512维；BERT中，词嵌入有768维和1024维两个版本。</li><li>one-hot与embedding的关系 <ul><li>词向量就是one hot的全连接层的权重矩阵参数</li><li>例如，对于一个有30000个词汇量的词典V，每一个词都是30000维的一个稀疏向量。对于每一个词，我们给他乘一个30000*512的权重矩阵，最终就得到一个512维的向量了</li></ul></li><li>词向量算法代表：word2vec <ul><li>word2vec是一个具有代表性的词嵌入学习模型，它构建了一个简化的浅层神经网络来学习词表示</li><li>两种训练方式/两种模型 <ul><li>连续词袋模型 CBOW （Continuous Bag of Words） <ul><li>CBOW模型根据上下文单词的平均向量来预测中心单词</li><li>思想：如果两个词的上下文很相似，那么这两个词很相似</li></ul></li><li>Skip-gram模型 <ul><li>根据一个中心单词来预测它周围的上下文单词</li><li>思想：如果两个词很相似，那么这两个词的上下文也会很相似</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul>',2),n=[d];function r(u,a){return i(),e("div",null,n)}const _=l(t,[["render",r],["__file","08_word_embedding.html.vue"]]);export{_ as default};
