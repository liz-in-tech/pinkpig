import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as n,f as e}from"./app-dN3CFuJt.js";const t="/pinkpig/assets/question_area-ic4HbVwM.png",g="/pinkpig/assets/solve_area-ixTPdMTq.png",s="/pinkpig/assets/new_mode-0mwW725t.png",p="/pinkpig/assets/low_and_zero-OS9zCHpU.png",o="/pinkpig/assets/product_position-2G79eO5O.png",r="/pinkpig/assets/client_value-xLPNNomf.png",l="/pinkpig/assets/product_architecture-KNMD-QC-.png",c="/pinkpig/assets/technique_architecture-NLQwCWrY.png",d="/pinkpig/assets/architecture-ObZdbE_B.png",f="/pinkpig/assets/architecture1-DxpBXlbO.png",_="/pinkpig/assets/future-mkxcfALb.png",u="/pinkpig/assets/view_home-k_TQWaf7.png",m="/pinkpig/assets/view_page-4m3VAKUZ.png",h="/pinkpig/assets/view_logic-J6WSiBw1.png",b="/pinkpig/assets/view_data-BNwfUFnh.png",x="/pinkpig/assets/view_process-_z9wrztj.png",y="/pinkpig/assets/nasl_necessary-zInxb9f3.png",k="/pinkpig/assets/nasl_necessary1-nXaxj7fG.png",z="/pinkpig/assets/nasl_3_elements-3kMvMCIv.png",A="/pinkpig/assets/nasl_way-cyPAibnm.png",L="/pinkpig/assets/nasl_architecture-r69Gohjp.png",v="/pinkpig/assets/nasl_top--dbcpuFR.png",S="/pinkpig/assets/nasl_base-AQeU5HIB.png",w="/pinkpig/assets/nasl_example1-PrNYgLz3.png",N="/pinkpig/assets/nasl_example2-weuWLvTZ.png",C="/pinkpig/assets/dsl-qNK09xeH.png",I="/pinkpig/assets/lop-W2x7PX4K.png",G="/pinkpig/assets/lop1-JN6Gr4Px.png",P="/pinkpig/assets/dsl_merge-6NP_Rwt6.png",W="/pinkpig/assets/dsl_example1-kAh-tdQD.png",R="/pinkpig/assets/dsl_example2-JI3RX_GU.png",T="/pinkpig/assets/dsl_example3-W-P_TurL.png",M="/pinkpig/assets/language_server-m-h_ZjyL.png",D="/pinkpig/assets/language_server1-y8TP1YjU.png",J="/pinkpig/assets/code_generation-TbLfomLD.png",j="/pinkpig/assets/debug1-xscrrHHb.png",B="/pinkpig/assets/debug2-qcRQGGnV.png",H="/pinkpig/assets/debug3-wwUYdmqo.png",O="/pinkpig/assets/debug4-lYC_Ln-t.png",K="/pinkpig/assets/debug5-3Oi-HjeO.png",Q="/pinkpig/assets/debug6-ZBkXvao6.png",U="/pinkpig/assets/AI_copilot_bottleneck-GTKwLIup.png",q="/pinkpig/assets/AI_engineering--o-wrfNE.png",E="/pinkpig/assets/AI_engineering1-iX2CgFof.png",F="/pinkpig/assets/AI_engineering2-LEh0_3mF.png",V="/pinkpig/assets/NL2NASL_bottleneck-7_7KjaIh.png",X="/pinkpig/assets/NL2NASL_fewshot-HdWex-CP.png",Y="/pinkpig/assets/NL2NASL_finetune-1yAvPwvF.png",Z="/pinkpig/assets/NL2NASL_each_step-aiK6mU2S.png",$="/pinkpig/assets/recommend_n_gram-Wfg6ssXI.png",ii="/pinkpig/assets/agent-hzL4E_Lm.png",ai="/pinkpig/assets/agent1-s7YK0Sxs.png",ni="/pinkpig/assets/agent2-2g2ut-rA.png",ei="/pinkpig/assets/ReAct-hE5_yIyf.png",ti="/pinkpig/assets/ReAct1-xQWf5ERw.png",gi="/pinkpig/assets/ReAct2-7hkBpQh0.png",si="/pinkpig/assets/Plan_Solve-hHBIIlGw.png",pi="/pinkpig/assets/RAG-uC9lGd70.png",oi="/pinkpig/assets/RAG1-jfM0M6xc.png",ri={},li=e('<h1 id="网易-——-网易数帆低代码codewave" tabindex="-1"><a class="header-anchor" href="#网易-——-网易数帆低代码codewave" aria-hidden="true">#</a> 网易 —— 网易数帆低代码CodeWave</h1><h2 id="低代码" tabindex="-1"><a class="header-anchor" href="#低代码" aria-hidden="true">#</a> 低代码</h2><p>低代码→图形化编程-完整的应用编程语义与框架</p><p>采用的Java语言，每一个编程语言都是图灵完备的</p><p>低代码本质</p><ul><li>可视化编程语言与框架</li><li>软件资产管理工具</li><li>软件集成工具</li><li>软件运维工具</li></ul><p>低代码特点</p><ul><li>更少的代码量</li><li>更短的交付周期</li><li>更高的软件质量</li><li>更低的维护成本</li></ul><p>低代码： 更偏向软件工程的抽象</p><p>OutSystem, Mendix, CodeWave</p><p>低代码打造新的研发模式</p><ul><li>专业者可从繁复低效的crud中解放出来</li><li>通过对业务领域的抽象和分析，编写更通用化抽象化的组件成为可复用的资产</li><li>随着生态的强大，吸引更多第三方生态厂商参与形成更多可复用资产</li></ul><p><img src="'+t+'" alt="" loading="lazy"><img src="'+g+'" alt="" loading="lazy"><img src="'+s+'" alt="" loading="lazy"></p><h2 id="低代码与零代码" tabindex="-1"><a class="header-anchor" href="#低代码与零代码" aria-hidden="true">#</a> 低代码与零代码</h2><p>零代码：更偏向场景的抽象（数据分析，电子表格，流程）</p><p>零代码特点：</p><ul><li>基于场景封装，完全无需代码</li><li>简单，易用性好，上手快</li><li>面向业务人员</li></ul><p>零代码不足：</p><ul><li>灵活性差 （定制化能力差），支撑场景有限</li><li>可扩展性差</li></ul><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="codewave平台定位、产品架构与技术架构" tabindex="-1"><a class="header-anchor" href="#codewave平台定位、产品架构与技术架构" aria-hidden="true">#</a> CodeWave平台定位、产品架构与技术架构</h2><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="可视化搭建界面" tabindex="-1"><a class="header-anchor" href="#可视化搭建界面" aria-hidden="true">#</a> 可视化搭建界面</h2><p>应用中心的应用主页</p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>页面可视化搭建界面</p><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>逻辑可视化搭建界面</p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>数据可视化搭建界面</p><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>流程可视化搭建界面</p><figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="nasl-低代码内核-application-specific-language-应用特定语言" tabindex="-1"><a class="header-anchor" href="#nasl-低代码内核-application-specific-language-应用特定语言" aria-hidden="true">#</a> NASL-低代码内核（Application Specific Language，应用特定语言）</h2><p>ASL-》将图形化界面逻辑表示为json文本化表示</p><p>向用户暴露3项</p><ul><li>NASL基础语言</li><li>NASL领域DSL语言</li><li>NASL语言框架</li></ul><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+A+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+L+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>红线以上是用户可感知的，红线以下是用户无感知的</p><p>MVC架构（Model，View，Controller）</p><figure><img src="'+S+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+w+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+N+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="dsl-domain-specific-language-领域特定语言" tabindex="-1"><a class="header-anchor" href="#dsl-domain-specific-language-领域特定语言" aria-hidden="true">#</a> DSL（Domain Specific Language，领域特定语言）</h2><p>可视化编辑器唯一作用是生成各种域的DSL，页面/逻辑/数据/流程等有各自对应的编辑器/设计器，生成各自对应的DSL</p><p>高上限：可复用的DSL</p><p>如何平衡通用性和灵活性的矛盾</p><p>示例：数据查询领域-数据查询有很多通用的地方，如筛选条件，排序，分页等</p><p>模型驱动设计 用户最需要关注的是Model（实体entity）</p><p>好处是代码标准化规范化-》精简的代码量-》更高的质量，更低的bug率</p><figure><img src="'+C+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+I+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+G+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+P+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+W+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+R+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+T+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="language-server-语义保障机制" tabindex="-1"><a class="header-anchor" href="#language-server-语义保障机制" aria-hidden="true">#</a> Language Server 语义保障机制</h2><p>质量可控：Language Server（能够做到浏览器端的类型检查和自动补全）</p><p>有两种实现路径：CodeWave采用的是上者，借助通用语言的ls，并没有自研ls</p><figure><img src="'+M+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+D+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="代码生成" tabindex="-1"><a class="header-anchor" href="#代码生成" aria-hidden="true">#</a> 代码生成</h2><p>对于引擎式和编译式，本项目采用编译式，不强绑定低代码厂商，支持导出源码，可以进行二次独立开发，可独立部署</p><p>从可视化到代码生成：可视化NASL-》抽象语法树AST-》标注语法树-》代码生成：JS（前端）+Java（后端）</p><p>交付给用户的是NASL语言翻译成的Java和JS语言</p><p>AST树（NASL JSON AST树）</p><p>类型标注是指把缺失类型的字段补齐类型，如int，string等</p><figure><img src="'+J+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> Debug</h2><p>代码：按行打断点</p><p>可视化形态：按块打断点</p><p>nasl和可视化组件是一一映射的关系</p><p>nasl经过编译器生成sourcemap，sourcemap建立了nsal与源代码之间的双向映射</p><p>java运行在JVM上，JS运行在浏览器上</p><p>界面上点击调试命令 step over/into等，不是单独拆开调试服务端侧和客户端侧，而是通过低代码平台的命令下发统一处理，下发到服务端侧和客户端侧</p><p><img src="'+j+'" alt="" loading="lazy"><img src="'+B+'" alt="" loading="lazy"><img src="'+H+'" alt="" loading="lazy"><img src="'+O+'" alt="" loading="lazy"><img src="'+K+'" alt="" loading="lazy"><img src="'+Q+'" alt="" loading="lazy"></p><h2 id="codewave智能化" tabindex="-1"><a class="header-anchor" href="#codewave智能化" aria-hidden="true">#</a> CodeWave智能化</h2><h3 id="ai-copilot瓶颈" tabindex="-1"><a class="header-anchor" href="#ai-copilot瓶颈" aria-hidden="true">#</a> AI Copilot瓶颈</h3><figure><img src="'+U+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="aigc技术-ai-generated-content-的接入思路" tabindex="-1"><a class="header-anchor" href="#aigc技术-ai-generated-content-的接入思路" aria-hidden="true">#</a> AIGC技术（AI-generated Content）的接入思路</h3><ul><li>推荐能力：通过用户操作的上下文自动帮助用户推荐接下来的操作，如流程节点的推荐、图表类型的推荐等。-》用户更快入门，搭建更高质量的网站，解决用户在使用平台时的选择困难症 <ul><li>推荐系统思路</li><li>推荐能力并没有使用大模型，使用的是传统的算法n-gram语言模型</li></ul></li><li>解读能力：对生成的代码逻辑，可视化图表等进行解读</li><li>自动优化质量、安全、性能能力：通过代码扫描和算法，自动分析产品内的技术债务并给出优化建议，纬度包括性能、安全、可维护性、架构设计等。-》保证搭建产品的质量</li><li>自然语言编程能力，任务拆解，意图识别（NL2NASL/自然语言到NASL）把原来的设计器替换为自然语言输入 <ul><li>Prompt优化：通过Few shot</li><li>微调优化：NL2NASL Fine-Tune</li></ul></li><li>Agent需求分析智能体 <ul><li>对Agent的理解：通过Prompt驱动的，自主执行一些任务，能够调用工具Tools的，这种叫Agent</li><li>ReAct思路：Reasoning思考和Action任务执行的结合 <ul><li>ReAct存在问题：走一步看一步，缺乏宏观的规划的</li><li>AutoGPT大量使用了ReAct思路，经常会陷入不断循环中，烧token</li></ul></li><li>Plan&amp;Solve思路 <ul><li>Plan全局任务拆解，Solve每个拆解的任务执行</li></ul></li></ul></li><li>RAG <ul><li>和之前积累的资产结合</li></ul></li></ul><h3 id="ai工程化整体架构" tabindex="-1"><a class="header-anchor" href="#ai工程化整体架构" aria-hidden="true">#</a> AI工程化整体架构</h3><p><img src="'+q+'" alt="" loading="lazy"><img src="'+E+'" alt="" loading="lazy"><img src="'+F+'" alt="" loading="lazy"></p><h3 id="自然语言编程-nl2nasl" tabindex="-1"><a class="header-anchor" href="#自然语言编程-nl2nasl" aria-hidden="true">#</a> 自然语言编程 NL2NASL</h3><figure><img src="'+V+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+X+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+Y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+Z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="推荐能力-n-gram语言模型" tabindex="-1"><a class="header-anchor" href="#推荐能力-n-gram语言模型" aria-hidden="true">#</a> 推荐能力 N-gram语言模型</h3><figure><img src="'+$+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="agent" tabindex="-1"><a class="header-anchor" href="#agent" aria-hidden="true">#</a> Agent</h3><figure><img src="'+ii+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+ai+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+ni+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+ei+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+ti+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+gi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+si+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="rag" tabindex="-1"><a class="header-anchor" href="#rag" aria-hidden="true">#</a> RAG</h3><p><img src="'+pi+'" alt="" loading="lazy"><img src="'+oi+'" alt="" loading="lazy"></p><h3 id="显存经验" tabindex="-1"><a class="header-anchor" href="#显存经验" aria-hidden="true">#</a> 显存经验</h3><p>吃显存看参数量，需要预估模型需要显卡的数量</p><p>经验：1b参数量对应3.75G显存</p><p>如果家里有一张4090的卡，就可以玩30b的模型</p><p>qwen72b可能需要2-3张卡</p>',117),ci=[li];function di(fi,_i){return a(),n("div",null,ci)}const hi=i(ri,[["render",di],["__file","wy_codeWave.html.vue"]]);export{hi as default};
