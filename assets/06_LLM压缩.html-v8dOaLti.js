import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as t,e as i}from"./app-eTVGMpLM.js";const r={},n=i('<h1 id="低资源部署策略-模型压缩技术-修改模型权重本身来减少每个-gpu-上的内存使用" tabindex="-1"><a class="header-anchor" href="#低资源部署策略-模型压缩技术-修改模型权重本身来减少每个-gpu-上的内存使用" aria-hidden="true">#</a> 低资源部署策略/模型压缩技术 (修改模型权重本身来减少每个 GPU 上的内存使用)</h1><h2 id="_1-模型量化-quantization-混合精度" tabindex="-1"><a class="header-anchor" href="#_1-模型量化-quantization-混合精度" aria-hidden="true">#</a> 1. 模型量化 / Quantization / 混合精度</h2><p>降低模型的精度可以带来多种好处。如果模型占用的内存空间较少，则可以在相同数量的硬件上安运行更大的模型。量化还意味着可以在相同的带宽上传输更多参数，这有助于加速带宽有限的模型。</p><h2 id="_2-模型剪枝-稀疏-sparsity-正则化" tabindex="-1"><a class="header-anchor" href="#_2-模型剪枝-稀疏-sparsity-正则化" aria-hidden="true">#</a> 2. 模型剪枝 / 稀疏 Sparsity / 正则化</h2><p>与模型量化不同，模型蒸馏和模型剪枝则通过精简模型的结构，进而减少参数的数量。</p><h2 id="_3-模型蒸馏-distillation" tabindex="-1"><a class="header-anchor" href="#_3-模型蒸馏-distillation" aria-hidden="true">#</a> 3. 模型蒸馏 / Distillation</h2><p>与模型量化不同，模型蒸馏和模型剪枝则通过精简模型的结构，进而减少参数的数量。</p><p>缩小模型大小的另一种方法是通过称为蒸馏的过程将其知识转移到较小的模型。此过程涉及训练较小的模型（称为学生）来模仿较大模型（教师）的行为</p>',8),s=[n];function d(h,o){return e(),t("div",null,s)}const l=a(r,[["render",d],["__file","06_LLM压缩.html.vue"]]);export{l as default};
