const e=JSON.parse('{"key":"v-80fcc67e","path":"/cs/code/language/Java%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80.html","title":"Java语言基础","lang":"en-US","frontmatter":{"icon":"lightbulb","description":"Java语言基础 \\"对语言的熟悉程度\\" Java语言基础 导包汇总 基本/包装数据类型 继承 多态-父类引用指向子类对象 接口 泛型-类型参数化 lambda表达式- 函数参数化 IO 输出 输入 BigInteger Character* String* StringBuilder* sort Arrays Collections 通用* List* Queue&amp;Stack*&amp;PirorityQueue（堆==优先队列） Map Set Objects 网易语法总结 编码规范","head":[["meta",{"property":"og:url","content":"https://liz-in-tech.github.io/pinkpig/cs/code/language/Java%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"Liz"}],["meta",{"property":"og:title","content":"Java语言基础"}],["meta",{"property":"og:description","content":"Java语言基础 \\"对语言的熟悉程度\\" Java语言基础 导包汇总 基本/包装数据类型 继承 多态-父类引用指向子类对象 接口 泛型-类型参数化 lambda表达式- 函数参数化 IO 输出 输入 BigInteger Character* String* StringBuilder* sort Arrays Collections 通用* List* Queue&amp;Stack*&amp;PirorityQueue（堆==优先队列） Map Set Objects 网易语法总结 编码规范"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-29T16:42:17.000Z"}],["meta",{"property":"article:author","content":"Liz"}],["meta",{"property":"article:modified_time","content":"2024-10-29T16:42:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java语言基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-29T16:42:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Liz\\",\\"url\\":\\"https://github.com/liz-in-tech\\"}]}"]]},"headers":[{"level":2,"title":"导包汇总","slug":"导包汇总","link":"#导包汇总","children":[{"level":3,"title":"基本/包装数据类型","slug":"基本-包装数据类型","link":"#基本-包装数据类型","children":[]},{"level":3,"title":"继承","slug":"继承","link":"#继承","children":[]},{"level":3,"title":"多态-父类引用指向子类对象","slug":"多态-父类引用指向子类对象","link":"#多态-父类引用指向子类对象","children":[]},{"level":3,"title":"接口","slug":"接口","link":"#接口","children":[]},{"level":3,"title":"泛型-类型参数化","slug":"泛型-类型参数化","link":"#泛型-类型参数化","children":[]},{"level":3,"title":"lambda表达式- 函数参数化","slug":"lambda表达式-函数参数化","link":"#lambda表达式-函数参数化","children":[]},{"level":3,"title":"IO","slug":"io","link":"#io","children":[]},{"level":3,"title":"BigInteger","slug":"biginteger","link":"#biginteger","children":[]},{"level":3,"title":"Character*","slug":"character","link":"#character","children":[]},{"level":3,"title":"String*","slug":"string","link":"#string","children":[]},{"level":3,"title":"StringBuilder*","slug":"stringbuilder","link":"#stringbuilder","children":[]},{"level":3,"title":"sort","slug":"sort","link":"#sort","children":[]},{"level":3,"title":"Arrays","slug":"arrays","link":"#arrays","children":[]},{"level":3,"title":"Collections 通用*","slug":"collections-通用","link":"#collections-通用","children":[]},{"level":3,"title":"List*","slug":"list","link":"#list","children":[]},{"level":3,"title":"Queue&Stack*&PirorityQueue（堆==优先队列）","slug":"queue-stack-pirorityqueue-堆-优先队列","link":"#queue-stack-pirorityqueue-堆-优先队列","children":[]},{"level":3,"title":"Map","slug":"map","link":"#map","children":[]},{"level":3,"title":"Set","slug":"set","link":"#set","children":[]},{"level":3,"title":"Objects","slug":"objects","link":"#objects","children":[]}]},{"level":2,"title":"网易语法总结","slug":"网易语法总结","link":"#网易语法总结","children":[]},{"level":2,"title":"编码规范","slug":"编码规范","link":"#编码规范","children":[]}],"git":{"createdTime":1730220137000,"updatedTime":1730220137000,"contributors":[{"name":"unknown","email":"15721607377@163.com","commits":1}]},"readingTime":{"minutes":9.56,"words":2869},"filePathRelative":"cs/code/language/Java语言基础.md","localizedDate":"October 29, 2024","excerpt":"<h1> Java语言基础</h1>\\n<p>\\"对语言的熟悉程度\\" <br></p>\\n<ul>\\n<li><a href=\\"#java%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80\\">Java语言基础</a>\\n<ul>\\n<li><a href=\\"#%E5%AF%BC%E5%8C%85%E6%B1%87%E6%80%BB\\">导包汇总</a>\\n<ul>\\n<li><a href=\\"#%E5%9F%BA%E6%9C%AC%E5%8C%85%E8%A3%85%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\\">基本/包装数据类型</a></li>\\n<li><a href=\\"#%E7%BB%A7%E6%89%BF\\">继承</a></li>\\n<li><a href=\\"#%E5%A4%9A%E6%80%81-%E7%88%B6%E7%B1%BB%E5%BC%95%E7%94%A8%E6%8C%87%E5%90%91%E5%AD%90%E7%B1%BB%E5%AF%B9%E8%B1%A1\\">多态-父类引用指向子类对象</a></li>\\n<li><a href=\\"#%E6%8E%A5%E5%8F%A3\\">接口</a></li>\\n<li><a href=\\"#%E6%B3%9B%E5%9E%8B-%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E5%8C%96\\">泛型-类型参数化</a></li>\\n<li><a href=\\"#lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F--%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E5%8C%96\\">lambda表达式- 函数参数化</a></li>\\n<li><a href=\\"#io\\">IO</a>\\n<ul>\\n<li><a href=\\"#%E8%BE%93%E5%87%BA\\">输出</a></li>\\n<li><a href=\\"#%E8%BE%93%E5%85%A5\\">输入</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#biginteger\\">BigInteger</a></li>\\n<li><a href=\\"#character\\">Character*</a></li>\\n<li><a href=\\"#string\\">String*</a></li>\\n<li><a href=\\"#stringbuilder\\">StringBuilder*</a></li>\\n<li><a href=\\"#sort\\">sort</a></li>\\n<li><a href=\\"#arrays\\">Arrays</a></li>\\n<li><a href=\\"#collections-%E9%80%9A%E7%94%A8\\">Collections 通用*</a></li>\\n<li><a href=\\"#list\\">List*</a></li>\\n<li><a href=\\"#queuestackpirorityqueue%E5%A0%86%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97\\">Queue&amp;Stack*&amp;PirorityQueue（堆==优先队列）</a></li>\\n<li><a href=\\"#map\\">Map</a></li>\\n<li><a href=\\"#set\\">Set</a></li>\\n<li><a href=\\"#objects\\">Objects</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E7%BD%91%E6%98%93%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93\\">网易语法总结</a></li>\\n<li><a href=\\"#%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83\\">编码规范</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
