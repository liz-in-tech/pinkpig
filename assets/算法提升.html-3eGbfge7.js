const t=JSON.parse('{"key":"v-43972504","path":"/cs/code/%E7%AE%97%E6%B3%95%E6%8F%90%E5%8D%87.html","title":"算法提升","lang":"en-US","frontmatter":{"icon":"lightbulb","description":"算法提升 刷题（持续练习，刻意练习不熟悉的数据结构和算法，反复回顾） 刷算法 1.限时10分钟想思路，如果想不出来直接看题解，节省时间，试着根据题解写代码，还写不出来，直接看题解代码，理解后复现 2.重复刷题：时间久了会生疏，需重复刷找回记忆 3.写解题报告 写解题步骤，供忘记了快速想起来，减少重复刷题的遍数 Note:面试时，注重沟通和交流，把面试官当作之后的同事伙伴，一起交流问题 题库：力扣 做题：把所有想到的方法过一遍，时刻想到时空复杂度，选择时空复杂度最优的 关键：3分学，7分练，动手写，总结自己的代码模板 合格程序员的第一步：算法和数据结构 1.看题，边界范围，可通过范围知道可能的解法（询问题目细节，边界条件，可能的极端错误情况） 2.想尽可能多的解，找到最佳解（所有可能的解法都和面试官沟通一遍） 3.代码实现 4.学习别人的代码","head":[["meta",{"property":"og:url","content":"https://liz-in-tech.github.io/pinkpig/cs/code/%E7%AE%97%E6%B3%95%E6%8F%90%E5%8D%87.html"}],["meta",{"property":"og:site_name","content":"Liz"}],["meta",{"property":"og:title","content":"算法提升"}],["meta",{"property":"og:description","content":"算法提升 刷题（持续练习，刻意练习不熟悉的数据结构和算法，反复回顾） 刷算法 1.限时10分钟想思路，如果想不出来直接看题解，节省时间，试着根据题解写代码，还写不出来，直接看题解代码，理解后复现 2.重复刷题：时间久了会生疏，需重复刷找回记忆 3.写解题报告 写解题步骤，供忘记了快速想起来，减少重复刷题的遍数 Note:面试时，注重沟通和交流，把面试官当作之后的同事伙伴，一起交流问题 题库：力扣 做题：把所有想到的方法过一遍，时刻想到时空复杂度，选择时空复杂度最优的 关键：3分学，7分练，动手写，总结自己的代码模板 合格程序员的第一步：算法和数据结构 1.看题，边界范围，可通过范围知道可能的解法（询问题目细节，边界条件，可能的极端错误情况） 2.想尽可能多的解，找到最佳解（所有可能的解法都和面试官沟通一遍） 3.代码实现 4.学习别人的代码"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-29T16:42:17.000Z"}],["meta",{"property":"article:author","content":"Liz"}],["meta",{"property":"article:modified_time","content":"2024-10-29T16:42:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法提升\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-29T16:42:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Liz\\",\\"url\\":\\"https://github.com/liz-in-tech\\"}]}"]]},"headers":[],"git":{"createdTime":1730220137000,"updatedTime":1730220137000,"contributors":[{"name":"unknown","email":"15721607377@163.com","commits":1}]},"readingTime":{"minutes":2.04,"words":612},"filePathRelative":"cs/code/算法提升.md","localizedDate":"October 29, 2024","excerpt":"<h1> 算法提升</h1>\\n<h1> 刷题（持续练习，刻意练习不熟悉的数据结构和算法，反复回顾）</h1>\\n<p>刷算法 <br>\\n1.限时10分钟想思路，如果想不出来直接看题解，节省时间，试着根据题解写代码，还写不出来，直接看题解代码，理解后复现 <br>\\n2.重复刷题：时间久了会生疏，需重复刷找回记忆 <br>\\n3.写解题报告 <br>\\n写解题步骤，供忘记了快速想起来，减少重复刷题的遍数 <br></p>\\n<p>Note:面试时，注重沟通和交流，把面试官当作之后的同事伙伴，一起交流问题 <br>\\n题库：力扣 <br>\\n做题：把所有想到的方法过一遍，<strong>时刻想到时空复杂度</strong>，选择时空复杂度最优的 <br>\\n关键：3分学，7分练，动手写，总结自己的代码模板 <br>\\n合格程序员的第一步：算法和数据结构 <br>\\n <br>\\n1.看题，边界范围，可通过范围知道可能的解法（询问题目细节，边界条件，可能的极端错误情况） <br>\\n2.想尽可能多的解，找到最佳解（所有可能的解法都和面试官沟通一遍） <br>\\n3.代码实现 <br>\\n4.学习别人的代码 <br>\\n <br></p>","autoDesc":true}');export{t as data};
