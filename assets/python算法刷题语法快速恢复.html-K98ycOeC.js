const e=JSON.parse('{"key":"v-a0decba4","path":"/cs/code/language/python%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E8%AF%AD%E6%B3%95%E5%BF%AB%E9%80%9F%E6%81%A2%E5%A4%8D.html","title":"Python算法刷题语法快速恢复","lang":"en-US","frontmatter":{"icon":"lightbulb","description":"Python算法刷题语法快速恢复 关键词 and 与 or 或 not 非 is 等于（比较对象） == 等于（比较值） True 真 False 假 None 空 选择 n1 = int(num1[i]) if i &gt;= 0 else 0 return True if len(stack) == 0 else False if root in (None, p, q): return root 循环 while xxx: for item in nums: for index, item in enumerate(nums): for i in range(n)： # 从0到（n-1） for i in range(1, len(prices)): # 从1到（len-1） for _ in range(len(q)): # 如果不需要用到遍历的值，用“_”","head":[["meta",{"property":"og:url","content":"https://liz-in-tech.github.io/pinkpig/cs/code/language/python%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E8%AF%AD%E6%B3%95%E5%BF%AB%E9%80%9F%E6%81%A2%E5%A4%8D.html"}],["meta",{"property":"og:site_name","content":"Liz"}],["meta",{"property":"og:title","content":"Python算法刷题语法快速恢复"}],["meta",{"property":"og:description","content":"Python算法刷题语法快速恢复 关键词 and 与 or 或 not 非 is 等于（比较对象） == 等于（比较值） True 真 False 假 None 空 选择 n1 = int(num1[i]) if i &gt;= 0 else 0 return True if len(stack) == 0 else False if root in (None, p, q): return root 循环 while xxx: for item in nums: for index, item in enumerate(nums): for i in range(n)： # 从0到（n-1） for i in range(1, len(prices)): # 从1到（len-1） for _ in range(len(q)): # 如果不需要用到遍历的值，用“_”"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-29T16:42:17.000Z"}],["meta",{"property":"article:author","content":"Liz"}],["meta",{"property":"article:modified_time","content":"2024-10-29T16:42:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python算法刷题语法快速恢复\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-29T16:42:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Liz\\",\\"url\\":\\"https://github.com/liz-in-tech\\"}]}"]]},"headers":[{"level":2,"title":"关键词","slug":"关键词","link":"#关键词","children":[]},{"level":2,"title":"选择","slug":"选择","link":"#选择","children":[]},{"level":2,"title":"循环","slug":"循环","link":"#循环","children":[]},{"level":2,"title":"动态规划","slug":"动态规划","link":"#动态规划","children":[{"level":3,"title":"上三角/下三角 （按长度大小进行迭代，从左下角或右上角开始）","slug":"上三角-下三角-按长度大小进行迭代-从左下角或右上角开始","link":"#上三角-下三角-按长度大小进行迭代-从左下角或右上角开始","children":[]}]},{"level":2,"title":"定义变量","slug":"定义变量","link":"#定义变量","children":[]},{"level":2,"title":"实例化对象","slug":"实例化对象","link":"#实例化对象","children":[]},{"level":2,"title":"通用函数","slug":"通用函数","link":"#通用函数","children":[]},{"level":2,"title":"字符函数","slug":"字符函数","link":"#字符函数","children":[]},{"level":2,"title":"计算符","slug":"计算符","link":"#计算符","children":[]},{"level":2,"title":"词典/哈希表","slug":"词典-哈希表","link":"#词典-哈希表","children":[]},{"level":2,"title":"字符串","slug":"字符串","link":"#字符串","children":[]},{"level":2,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":2,"title":"二维数组","slug":"二维数组","link":"#二维数组","children":[{"level":3,"title":"二维数组排序","slug":"二维数组排序","link":"#二维数组排序","children":[]}]},{"level":2,"title":"栈（同数组一样）","slug":"栈-同数组一样","link":"#栈-同数组一样","children":[]},{"level":2,"title":"队列","slug":"队列","link":"#队列","children":[]},{"level":2,"title":"堆","slug":"堆","link":"#堆","children":[]}],"git":{"createdTime":1730220137000,"updatedTime":1730220137000,"contributors":[{"name":"unknown","email":"15721607377@163.com","commits":1}]},"readingTime":{"minutes":1.89,"words":568},"filePathRelative":"cs/code/language/python算法刷题语法快速恢复.md","localizedDate":"October 29, 2024","excerpt":"<h1> Python算法刷题语法快速恢复</h1>\\n<h2> 关键词</h2>\\n<p>and 与\\nor  或\\nnot 非\\nis  等于（比较对象）\\n== 等于（比较值）\\nTrue  真\\nFalse 假\\nNone 空</p>\\n<h2> 选择</h2>\\n<p>n1 = int(num1[i]) if i &gt;= 0 else 0\\nreturn True if len(stack) == 0 else False\\nif root in (None, p, q): return root</p>\\n<h2> 循环</h2>\\n<p>while xxx:\\nfor item in nums:\\nfor index, item in enumerate(nums):\\nfor i in range(n)： # 从0到（n-1）\\nfor i in range(1, len(prices)): # 从1到（len-1）\\nfor _ in range(len(q)): # 如果不需要用到遍历的值，用“_”</p>","autoDesc":true}');export{e as data};
