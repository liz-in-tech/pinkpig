const n=JSON.parse('{"key":"v-7a0c1079","path":"/cs/code/algorithm/6.%E5%AD%97%E7%AC%A6%E4%B8%B2.html","title":"字符串","lang":"en-US","frontmatter":{"icon":"lightbulb","description":"字符串 哈希 假如要把字符串映射到数组中的某个地方: private int hash(String s, int n) { &lt;br/&gt; char[] arr = s.toCharArray(); &lt;br/&gt; int h = 0; &lt;br/&gt; for (int i=0; i&lt;arr.length; ++i) { &lt;br/&gt; h = h * 31 + arr[i]; &lt;br/&gt; } &lt;br/&gt; return Math.abs(h) % n; &lt;br/&gt; } &lt;br/&gt;","head":[["meta",{"property":"og:url","content":"https://liz-in-tech.github.io/pinkpig/cs/code/algorithm/6.%E5%AD%97%E7%AC%A6%E4%B8%B2.html"}],["meta",{"property":"og:site_name","content":"Liz"}],["meta",{"property":"og:title","content":"字符串"}],["meta",{"property":"og:description","content":"字符串 哈希 假如要把字符串映射到数组中的某个地方: private int hash(String s, int n) { &lt;br/&gt; char[] arr = s.toCharArray(); &lt;br/&gt; int h = 0; &lt;br/&gt; for (int i=0; i&lt;arr.length; ++i) { &lt;br/&gt; h = h * 31 + arr[i]; &lt;br/&gt; } &lt;br/&gt; return Math.abs(h) % n; &lt;br/&gt; } &lt;br/&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-29T16:42:17.000Z"}],["meta",{"property":"article:author","content":"Liz"}],["meta",{"property":"article:modified_time","content":"2024-10-29T16:42:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"字符串\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-29T16:42:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Liz\\",\\"url\\":\\"https://github.com/liz-in-tech\\"}]}"]]},"headers":[{"level":2,"title":"哈希","slug":"哈希","link":"#哈希","children":[]},{"level":2,"title":"字符串匹配算法","slug":"字符串匹配算法","link":"#字符串匹配算法","children":[{"level":3,"title":"KMP","slug":"kmp","link":"#kmp","children":[]},{"level":3,"title":"Boyer-Moore","slug":"boyer-moore","link":"#boyer-moore","children":[]}]},{"level":2,"title":"自动机","slug":"自动机","link":"#自动机","children":[]},{"level":2,"title":"AC自动机","slug":"ac自动机","link":"#ac自动机","children":[]},{"level":2,"title":"后缀数组","slug":"后缀数组","link":"#后缀数组","children":[]},{"level":2,"title":"滑动窗口","slug":"滑动窗口","link":"#滑动窗口","children":[]},{"level":2,"title":"字典树（Trie树，前缀树）","slug":"字典树-trie树-前缀树","link":"#字典树-trie树-前缀树","children":[]},{"level":2,"title":"后缀树","slug":"后缀树","link":"#后缀树","children":[]},{"level":2,"title":"编程题","slug":"编程题","link":"#编程题","children":[]}],"git":{"createdTime":1730220137000,"updatedTime":1730220137000,"contributors":[{"name":"unknown","email":"15721607377@163.com","commits":1}]},"readingTime":{"minutes":3.25,"words":974},"filePathRelative":"cs/code/algorithm/6.字符串.md","localizedDate":"October 29, 2024","excerpt":"<h1> 字符串</h1>\\n<h2> 哈希</h2>\\n<p>假如要把字符串映射到数组中的某个地方: <br></p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">hash</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> s<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> n<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token operator\\">&lt;</span>br<span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token keyword\\">char</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> arr <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toCharArray</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">&lt;</span>br<span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token keyword\\">int</span> h <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">&lt;</span>br<span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i<span class=\\"token operator\\">=</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">&lt;</span>arr<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">++</span>i<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token operator\\">&lt;</span>br<span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n        h <span class=\\"token operator\\">=</span> h <span class=\\"token operator\\">*</span> <span class=\\"token number\\">31</span> <span class=\\"token operator\\">+</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">&lt;</span>br<span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">&lt;</span>br<span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token class-name\\">Math</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">abs</span><span class=\\"token punctuation\\">(</span>h<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">%</span> n<span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">&lt;</span>br<span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">&lt;</span>br<span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
