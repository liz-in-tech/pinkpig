import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as r,e as i}from"./app-J0zIS755.js";const t={},d=i('<h1 id="预训练" tabindex="-1"><a class="header-anchor" href="#预训练" aria-hidden="true">#</a> 预训练</h1><ul><li>PTM,Pre-trained Model(预训练模型)</li></ul><h2 id="_1-预训练和微调" tabindex="-1"><a class="header-anchor" href="#_1-预训练和微调" aria-hidden="true">#</a> 1. 预训练和微调</h2><p>预训练阶段旨在通过大规模无标注文本建立模型的基础能力</p><p>微调阶段使用有标注数据对于模型进行特定任务的适配</p><h2 id="_2-预训练思想-共性学习" tabindex="-1"><a class="header-anchor" href="#_2-预训练思想-共性学习" aria-hidden="true">#</a> 2. 预训练思想：共性学习</h2><ol><li><p>将训练任务拆解成共性学习和特性学习两个步骤，预训练时进行共性学习，下游任务进行特性学习</p></li><li><p>下游任务的模型参数不再是随机初始化，而是用预训练学到的共性信息对下游任务的模型进行参数初始化</p></li></ol><h2 id="_3-预训练模型用于下游任务的两种策略" tabindex="-1"><a class="header-anchor" href="#_3-预训练模型用于下游任务的两种策略" aria-hidden="true">#</a> 3. 预训练模型用于下游任务的两种策略</h2><h3 id="_3-1-fixed-feature-extractor-固定特征提取器" tabindex="-1"><a class="header-anchor" href="#_3-1-fixed-feature-extractor-固定特征提取器" aria-hidden="true">#</a> 3.1. Fixed Feature Extractor(固定特征提取器)</h3><p>适用：这种策略适用于下游任务的数据量较少的情况，可以避免过拟合。</p><p>what：将预训练好的模型的权重冻结，只使用其特征提取器提取下游任务数据的特征，然后将这些特征输入到下游任务的模型中进行训练。总之，冻结原来的参数，只训练一个新的分类层。</p><h3 id="_3-2-fine-tuning-微调" tabindex="-1"><a class="header-anchor" href="#_3-2-fine-tuning-微调" aria-hidden="true">#</a> 3.2. Fine-Tuning(微调)</h3><p>适用：微调一般是在有监督学习的框架下进行的。</p><p>是一种迁移学习方法，指在预训练模型的基础上，对部分或全部的参数进行微小的修改，以适应新的任务。</p>',14),h=[d];function n(c,_){return a(),r("div",null,h)}const s=e(t,[["render",n],["__file","03_预训练.html.vue"]]);export{s as default};
