const i=JSON.parse('{"key":"v-62eb8a96","path":"/cs/code/quick_recovery.html","title":"快速恢复30题","lang":"en-US","frontmatter":{"icon":"lightbulb","description":"快速恢复30题 1.链表（5题） 206 反转链表 92 反转链表 II 25 K个一组翻转链表 142 环形链表 II 143 重排链表 2.动态规划（5题） 70 爬楼梯 1143 最长公共子序列 64 最小路径和 5 最长回文子串 300 最长上升子序列 (方法一：动态规划，方法二：单调栈) 3.树（3题） 102 二叉树的层次遍历 103 二叉树的锯齿形层序遍历 236 二叉树的最近公共祖先 4.DFS（3题） 46 全排列 51 N皇后 200 岛屿数量 5.BFS（3题） 1926 迷宫中离入口最近的出口 210 课程表 II 127 单词接龙 6.队列/堆（1题） 239 滑动窗口最大值（方法一：单调队列，方法二：优先队列/堆） 7.栈（3题） 739 每日温度 (方法：单调栈) 155 最小栈 224 基本计算器（方法：计算器=多位数+加减+乘除+括号） 8.哈希表（2题） 3 无重复字符的最长子串（滑动窗口+哈希） 146 LRU 缓存 9.二分查找（1题） 33 旋转过的排序数组 10.排序（4题） 56 合并区间 215 数组中的第K个最大元素（编程实现 O(n) 时间复杂度内找到一组数据的第 K 大元素） 912 排序数组（用于练习O(nlogn)的排序）-练习2种排序：快排/归并排序","head":[["meta",{"property":"og:url","content":"https://liz-in-tech.github.io/pinkpig/cs/code/quick_recovery.html"}],["meta",{"property":"og:site_name","content":"Liz"}],["meta",{"property":"og:title","content":"快速恢复30题"}],["meta",{"property":"og:description","content":"快速恢复30题 1.链表（5题） 206 反转链表 92 反转链表 II 25 K个一组翻转链表 142 环形链表 II 143 重排链表 2.动态规划（5题） 70 爬楼梯 1143 最长公共子序列 64 最小路径和 5 最长回文子串 300 最长上升子序列 (方法一：动态规划，方法二：单调栈) 3.树（3题） 102 二叉树的层次遍历 103 二叉树的锯齿形层序遍历 236 二叉树的最近公共祖先 4.DFS（3题） 46 全排列 51 N皇后 200 岛屿数量 5.BFS（3题） 1926 迷宫中离入口最近的出口 210 课程表 II 127 单词接龙 6.队列/堆（1题） 239 滑动窗口最大值（方法一：单调队列，方法二：优先队列/堆） 7.栈（3题） 739 每日温度 (方法：单调栈) 155 最小栈 224 基本计算器（方法：计算器=多位数+加减+乘除+括号） 8.哈希表（2题） 3 无重复字符的最长子串（滑动窗口+哈希） 146 LRU 缓存 9.二分查找（1题） 33 旋转过的排序数组 10.排序（4题） 56 合并区间 215 数组中的第K个最大元素（编程实现 O(n) 时间复杂度内找到一组数据的第 K 大元素） 912 排序数组（用于练习O(nlogn)的排序）-练习2种排序：快排/归并排序"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-27T06:30:42.000Z"}],["meta",{"property":"article:author","content":"Liz"}],["meta",{"property":"article:modified_time","content":"2025-04-27T06:30:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"快速恢复30题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-27T06:30:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Liz\\",\\"url\\":\\"https://github.com/liz-in-tech\\"}]}"]]},"headers":[],"git":{"createdTime":1736562259000,"updatedTime":1745735442000,"contributors":[{"name":"Liz In Tech","email":"42017051+liz-in-tech@users.noreply.github.com","commits":1},{"name":"liz","email":"liz@MacBook-Pro-6.local","commits":1}]},"readingTime":{"minutes":1.2,"words":359},"filePathRelative":"cs/code/quick_recovery.md","localizedDate":"January 11, 2025","excerpt":"<h1> 快速恢复30题</h1>\\n<ul>\\n<li>1.链表（5题）\\n<ul>\\n<li>206 反转链表</li>\\n<li>92 反转链表 II</li>\\n<li>25 K个一组翻转链表</li>\\n<li>142 环形链表 II</li>\\n<li>143 重排链表</li>\\n</ul>\\n</li>\\n<li>2.动态规划（5题）\\n<ul>\\n<li>70 爬楼梯</li>\\n<li>1143 最长公共子序列</li>\\n<li>64 最小路径和</li>\\n<li>5 最长回文子串</li>\\n<li>300 最长上升子序列 (方法一：动态规划，方法二：单调栈)</li>\\n</ul>\\n</li>\\n<li>3.树（3题）\\n<ul>\\n<li>102 二叉树的层次遍历</li>\\n<li>103 二叉树的锯齿形层序遍历</li>\\n<li>236 二叉树的最近公共祖先</li>\\n</ul>\\n</li>\\n<li>4.DFS（3题）\\n<ul>\\n<li>46 全排列</li>\\n<li>51 N皇后</li>\\n<li>200 岛屿数量</li>\\n</ul>\\n</li>\\n<li>5.BFS（3题）\\n<ul>\\n<li>1926 迷宫中离入口最近的出口</li>\\n<li>210 课程表 II</li>\\n<li>127 单词接龙</li>\\n</ul>\\n</li>\\n<li>6.队列/堆（1题）\\n<ul>\\n<li>239 滑动窗口最大值（方法一：单调队列，方法二：优先队列/堆）</li>\\n</ul>\\n</li>\\n<li>7.栈（3题）\\n<ul>\\n<li>739 每日温度 (方法：单调栈)</li>\\n<li>155 最小栈</li>\\n<li>224 基本计算器（方法：计算器=多位数+加减+乘除+括号）</li>\\n</ul>\\n</li>\\n<li>8.哈希表（2题）\\n<ul>\\n<li>3 无重复字符的最长子串（滑动窗口+哈希）</li>\\n<li>146 LRU 缓存</li>\\n</ul>\\n</li>\\n<li>9.二分查找（1题）\\n<ul>\\n<li>33 旋转过的排序数组</li>\\n</ul>\\n</li>\\n<li>10.排序（4题）\\n<ul>\\n<li>56 合并区间</li>\\n<li>215 数组中的第K个最大元素（编程实现 O(n) 时间复杂度内找到一组数据的第 K 大元素）</li>\\n<li>912 排序数组（用于练习O(nlogn)的排序）-练习2种排序：快排/归并排序</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{i as data};
