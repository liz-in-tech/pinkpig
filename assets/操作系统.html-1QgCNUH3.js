const E=JSON.parse('{"key":"v-0346fffe","path":"/cs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html","title":"操作系统","lang":"en-US","frontmatter":{"icon":"lightbulb","description":"操作系统 操作系统 快速掌握面试 1. 操作系统：应用程序和硬件之间的媒介 2. 并发&amp;并行，进程&amp;线程&amp;协程 3. 进程上下文切换&amp;线程上下文切换 4. 用户态&amp;内核态，系统调用：用户态通过系统调用切换到内核态 5. 操作系统的进程/线程有哪些状态（Note:Java是6种状态）：创建，就绪，运行，阻塞，结束 6. 进程间通信（7种） 7. 进程的调度算法 8. 线程间同步 9. 操作系统的内存管理 10. 常见内存管理机制 11. 页式管理重要概念：快表&amp;多级页表 12. 虚拟内存（虚拟地址）&amp;物理内存（物理地址） 13. 交换空间：磁盘上用于扩展内存的一块空间，就叫交换空间。 14. 页面置换算法 区分IO密集、内存密集和计算密集 Java 中 IO 流分为几种? 既然有了字节流,为什么还要有字符流? BIO、NIO、AIO IO汇总表概览 五大IO模型（狭义NIO） BIO (阻塞I/O, blocking I/O) NIO/IO多路复用 (非阻塞I/O, noblocking I/O) BIO与NIO的区别 NIO三大核心组件：Selector（选择器）、Channel（通道）、Buffer（缓冲器） I/O多路复用的三种实现机制 select与poll epoll 比较 AIO (异步I/O,Asynchronous I/O)","head":[["meta",{"property":"og:url","content":"https://liz-in-tech.github.io/pinkpig/cs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"Liz"}],["meta",{"property":"og:title","content":"操作系统"}],["meta",{"property":"og:description","content":"操作系统 操作系统 快速掌握面试 1. 操作系统：应用程序和硬件之间的媒介 2. 并发&amp;并行，进程&amp;线程&amp;协程 3. 进程上下文切换&amp;线程上下文切换 4. 用户态&amp;内核态，系统调用：用户态通过系统调用切换到内核态 5. 操作系统的进程/线程有哪些状态（Note:Java是6种状态）：创建，就绪，运行，阻塞，结束 6. 进程间通信（7种） 7. 进程的调度算法 8. 线程间同步 9. 操作系统的内存管理 10. 常见内存管理机制 11. 页式管理重要概念：快表&amp;多级页表 12. 虚拟内存（虚拟地址）&amp;物理内存（物理地址） 13. 交换空间：磁盘上用于扩展内存的一块空间，就叫交换空间。 14. 页面置换算法 区分IO密集、内存密集和计算密集 Java 中 IO 流分为几种? 既然有了字节流,为什么还要有字符流? BIO、NIO、AIO IO汇总表概览 五大IO模型（狭义NIO） BIO (阻塞I/O, blocking I/O) NIO/IO多路复用 (非阻塞I/O, noblocking I/O) BIO与NIO的区别 NIO三大核心组件：Selector（选择器）、Channel（通道）、Buffer（缓冲器） I/O多路复用的三种实现机制 select与poll epoll 比较 AIO (异步I/O,Asynchronous I/O)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-29T16:42:17.000Z"}],["meta",{"property":"article:author","content":"Liz"}],["meta",{"property":"article:modified_time","content":"2024-10-29T16:42:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"操作系统\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-29T16:42:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Liz\\",\\"url\\":\\"https://github.com/liz-in-tech\\"}]}"]]},"headers":[{"level":2,"title":"1. 操作系统：应用程序和硬件之间的媒介","slug":"_1-操作系统-应用程序和硬件之间的媒介","link":"#_1-操作系统-应用程序和硬件之间的媒介","children":[]},{"level":2,"title":"2. 并发&并行，进程&线程&协程","slug":"_2-并发-并行-进程-线程-协程","link":"#_2-并发-并行-进程-线程-协程","children":[]},{"level":2,"title":"3. 进程上下文切换&线程上下文切换","slug":"_3-进程上下文切换-线程上下文切换","link":"#_3-进程上下文切换-线程上下文切换","children":[]},{"level":2,"title":"4. 用户态&内核态，系统调用：用户态通过系统调用切换到内核态","slug":"_4-用户态-内核态-系统调用-用户态通过系统调用切换到内核态","link":"#_4-用户态-内核态-系统调用-用户态通过系统调用切换到内核态","children":[]},{"level":2,"title":"5. 操作系统的进程/线程有哪些状态（Note:Java是6种状态）：创建，就绪，运行，阻塞，结束","slug":"_5-操作系统的进程-线程有哪些状态-note-java是6种状态-创建-就绪-运行-阻塞-结束","link":"#_5-操作系统的进程-线程有哪些状态-note-java是6种状态-创建-就绪-运行-阻塞-结束","children":[]},{"level":2,"title":"6. 进程间通信（7种）","slug":"_6-进程间通信-7种","link":"#_6-进程间通信-7种","children":[]},{"level":2,"title":"7. 进程的调度算法","slug":"_7-进程的调度算法","link":"#_7-进程的调度算法","children":[]},{"level":2,"title":"8. 线程间同步","slug":"_8-线程间同步","link":"#_8-线程间同步","children":[]},{"level":2,"title":"9. 操作系统的内存管理","slug":"_9-操作系统的内存管理","link":"#_9-操作系统的内存管理","children":[]},{"level":2,"title":"10. 常见内存管理机制","slug":"_10-常见内存管理机制","link":"#_10-常见内存管理机制","children":[]},{"level":2,"title":"11. 页式管理重要概念：快表&多级页表","slug":"_11-页式管理重要概念-快表-多级页表","link":"#_11-页式管理重要概念-快表-多级页表","children":[]},{"level":2,"title":"12. 虚拟内存（虚拟地址）&物理内存（物理地址）","slug":"_12-虚拟内存-虚拟地址-物理内存-物理地址","link":"#_12-虚拟内存-虚拟地址-物理内存-物理地址","children":[]},{"level":2,"title":"13. 交换空间：磁盘上用于扩展内存的一块空间，就叫交换空间。","slug":"_13-交换空间-磁盘上用于扩展内存的一块空间-就叫交换空间。","link":"#_13-交换空间-磁盘上用于扩展内存的一块空间-就叫交换空间。","children":[]},{"level":2,"title":"14. 页面置换算法","slug":"_14-页面置换算法","link":"#_14-页面置换算法","children":[]},{"level":2,"title":"既然有了字节流,为什么还要有字符流?","slug":"既然有了字节流-为什么还要有字符流","link":"#既然有了字节流-为什么还要有字符流","children":[]},{"level":2,"title":"IO汇总表概览","slug":"io汇总表概览","link":"#io汇总表概览","children":[]},{"level":2,"title":"五大IO模型（狭义NIO）","slug":"五大io模型-狭义nio","link":"#五大io模型-狭义nio","children":[]},{"level":2,"title":"BIO (阻塞I/O, blocking I/O)","slug":"bio-阻塞i-o-blocking-i-o","link":"#bio-阻塞i-o-blocking-i-o","children":[]},{"level":2,"title":"NIO/IO多路复用 (非阻塞I/O, noblocking I/O)","slug":"nio-io多路复用-非阻塞i-o-noblocking-i-o","link":"#nio-io多路复用-非阻塞i-o-noblocking-i-o","children":[{"level":3,"title":"BIO与NIO的区别","slug":"bio与nio的区别","link":"#bio与nio的区别","children":[]},{"level":3,"title":"NIO三大核心组件：Selector（选择器）、Channel（通道）、Buffer（缓冲器）","slug":"nio三大核心组件-selector-选择器-、channel-通道-、buffer-缓冲器","link":"#nio三大核心组件-selector-选择器-、channel-通道-、buffer-缓冲器","children":[]},{"level":3,"title":"I/O多路复用的三种实现机制","slug":"i-o多路复用的三种实现机制","link":"#i-o多路复用的三种实现机制","children":[]}]},{"level":2,"title":"AIO (异步I/O,Asynchronous I/O)","slug":"aio-异步i-o-asynchronous-i-o","link":"#aio-异步i-o-asynchronous-i-o","children":[]}],"git":{"createdTime":1730220137000,"updatedTime":1730220137000,"contributors":[{"name":"unknown","email":"15721607377@163.com","commits":1}]},"readingTime":{"minutes":16.52,"words":4955},"filePathRelative":"cs/操作系统.md","localizedDate":"October 29, 2024","excerpt":"<h1> 操作系统</h1>\\n<ul>\\n<li><a href=\\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F\\">操作系统</a></li>\\n<li><a href=\\"#%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1%E9%9D%A2%E8%AF%95\\">快速掌握面试</a>\\n<ul>\\n<li><a href=\\"#1-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%92%8C%E7%A1%AC%E4%BB%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E5%AA%92%E4%BB%8B-\\">1. 操作系统：应用程序和硬件之间的媒介 </a></li>\\n<li><a href=\\"#2-%E5%B9%B6%E5%8F%91%E5%B9%B6%E8%A1%8C%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E5%8D%8F%E7%A8%8B-\\">2. 并发&amp;并行，进程&amp;线程&amp;协程 </a></li>\\n<li><a href=\\"#3-%E8%BF%9B%E7%A8%8B%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2%E7%BA%BF%E7%A8%8B%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2-\\">3. 进程上下文切换&amp;线程上下文切换 </a></li>\\n<li><a href=\\"#4-%E7%94%A8%E6%88%B7%E6%80%81%E5%86%85%E6%A0%B8%E6%80%81%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E7%94%A8%E6%88%B7%E6%80%81%E9%80%9A%E8%BF%87%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%87%E6%8D%A2%E5%88%B0%E5%86%85%E6%A0%B8%E6%80%81-\\">4. 用户态&amp;内核态，系统调用：用户态通过系统调用切换到内核态 </a></li>\\n<li><a href=\\"#5-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%9C%89%E5%93%AA%E4%BA%9B%E7%8A%B6%E6%80%81notejava%E6%98%AF6%E7%A7%8D%E7%8A%B6%E6%80%81%E5%88%9B%E5%BB%BA%E5%B0%B1%E7%BB%AA%E8%BF%90%E8%A1%8C%E9%98%BB%E5%A1%9E%E7%BB%93%E6%9D%9F-\\">5. 操作系统的进程/线程有哪些状态（Note:Java是6种状态）：创建，就绪，运行，阻塞，结束 </a></li>\\n<li><a href=\\"#6-%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A17%E7%A7%8D-\\">6. 进程间通信（7种） </a></li>\\n<li><a href=\\"#7-%E8%BF%9B%E7%A8%8B%E7%9A%84%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95-\\">7. 进程的调度算法 </a></li>\\n<li><a href=\\"#8-%E7%BA%BF%E7%A8%8B%E9%97%B4%E5%90%8C%E6%AD%A5-\\">8. 线程间同步 </a></li>\\n<li><a href=\\"#9-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86-\\">9. 操作系统的内存管理 </a></li>\\n<li><a href=\\"#10-%E5%B8%B8%E8%A7%81%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6-\\">10. 常见内存管理机制 </a></li>\\n<li><a href=\\"#11-%E9%A1%B5%E5%BC%8F%E7%AE%A1%E7%90%86%E9%87%8D%E8%A6%81%E6%A6%82%E5%BF%B5%E5%BF%AB%E8%A1%A8%E5%A4%9A%E7%BA%A7%E9%A1%B5%E8%A1%A8-\\">11. 页式管理重要概念：快表&amp;多级页表 </a></li>\\n<li><a href=\\"#12-%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E8%99%9A%E6%8B%9F%E5%9C%B0%E5%9D%80%E7%89%A9%E7%90%86%E5%86%85%E5%AD%98%E7%89%A9%E7%90%86%E5%9C%B0%E5%9D%80-\\">12. 虚拟内存（虚拟地址）&amp;物理内存（物理地址） </a></li>\\n<li><a href=\\"#13-%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4%E7%A3%81%E7%9B%98%E4%B8%8A%E7%94%A8%E4%BA%8E%E6%89%A9%E5%B1%95%E5%86%85%E5%AD%98%E7%9A%84%E4%B8%80%E5%9D%97%E7%A9%BA%E9%97%B4%E5%B0%B1%E5%8F%AB%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4-\\">13. 交换空间：磁盘上用于扩展内存的一块空间，就叫交换空间。 </a></li>\\n<li><a href=\\"#14-%E9%A1%B5%E9%9D%A2%E7%BD%AE%E6%8D%A2%E7%AE%97%E6%B3%95-\\">14. 页面置换算法 </a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%8C%BA%E5%88%86io%E5%AF%86%E9%9B%86%E5%86%85%E5%AD%98%E5%AF%86%E9%9B%86%E5%92%8C%E8%AE%A1%E7%AE%97%E5%AF%86%E9%9B%86\\">区分IO密集、内存密集和计算密集</a></li>\\n<li><a href=\\"#java-%E4%B8%AD-io-%E6%B5%81%E5%88%86%E4%B8%BA%E5%87%A0%E7%A7%8D\\">Java 中 IO 流分为几种?</a>\\n<ul>\\n<li><a href=\\"#%E6%97%A2%E7%84%B6%E6%9C%89%E4%BA%86%E5%AD%97%E8%8A%82%E6%B5%81%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%98%E8%A6%81%E6%9C%89%E5%AD%97%E7%AC%A6%E6%B5%81\\">既然有了字节流,为什么还要有字符流?</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#bionioaio\\">BIO、NIO、AIO</a>\\n<ul>\\n<li><a href=\\"#io%E6%B1%87%E6%80%BB%E8%A1%A8%E6%A6%82%E8%A7%88\\">IO汇总表概览</a></li>\\n<li><a href=\\"#%E4%BA%94%E5%A4%A7io%E6%A8%A1%E5%9E%8B%E7%8B%AD%E4%B9%89nio\\">五大IO模型（狭义NIO）</a></li>\\n<li><a href=\\"#bio-%E9%98%BB%E5%A1%9Eio-blocking-io\\">BIO (阻塞I/O, blocking I/O)</a></li>\\n<li><a href=\\"#nioio%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8-%E9%9D%9E%E9%98%BB%E5%A1%9Eio-noblocking-io\\">NIO/IO多路复用 (非阻塞I/O, noblocking I/O)</a>\\n<ul>\\n<li><a href=\\"#bio%E4%B8%8Enio%E7%9A%84%E5%8C%BA%E5%88%AB\\">BIO与NIO的区别</a></li>\\n<li><a href=\\"#nio%E4%B8%89%E5%A4%A7%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6selector%E9%80%89%E6%8B%A9%E5%99%A8channel%E9%80%9A%E9%81%93buffer%E7%BC%93%E5%86%B2%E5%99%A8\\">NIO三大核心组件：Selector（选择器）、Channel（通道）、Buffer（缓冲器）</a></li>\\n<li><a href=\\"#io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8%E7%9A%84%E4%B8%89%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%9C%BA%E5%88%B6\\">I/O多路复用的三种实现机制</a>\\n<ul>\\n<li><a href=\\"#select%E4%B8%8Epoll\\">select与poll</a></li>\\n<li><a href=\\"#epoll\\">epoll</a></li>\\n<li><a href=\\"#%E6%AF%94%E8%BE%83\\">比较</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#aio-%E5%BC%82%E6%AD%A5ioasynchronous-io\\">AIO (异步I/O,Asynchronous I/O)</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{E as data};
